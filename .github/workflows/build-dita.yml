name: build-dita

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install DITA-OT
        run: |
          curl -L -o dita-ot.zip https://github.com/dita-ot/dita-ot/releases/download/4.2.1/dita-ot-4.2.1.zip
          unzip dita-ot.zip
          echo "$GITHUB_WORKSPACE/dita-ot-4.2.1/bin" >> $GITHUB_PATH

      - name: Ensure customization folders exist
        run: |
          mkdir -p dita-ot-4.2.1/plugins/org.dita.base/customization/xsl/html5
          mkdir -p dita-ot-4.2.1/plugins/org.dita.html5/xsl/html5/template/head

      - name: Copy custom files into DITA-OT
        run: |
          cp customization/xsl/html5/custom.xsl dita-ot-4.2.1/plugins/org.dita.base/customization/xsl/html5/

      - name: üîß Build full map with navigation buttons
        run: |
          dita -i topics/course_map.ditamap -f html5 -o out \
            -Dargs.css=mytheme.css \
            -Dargs.cssroot=customization/css \
            -Dargs.copycss=yes \
            -Dargs.rellinks=next-prev \
            -Dargs.xhtml.classattr=yes \
            -Dnav-toc=full \
            -Dhtml5.xsl=customization/xsl/html5/custom.xsl

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Inject Hypothes.is into HTML pages
        run: |
          node .github/scripts/inject-hypothesis.js

      - name: Inject Prism.js into HTML pages
        run: |
          node .github/scripts/inject-head-snippets.js

      - name: ‚úÖ Copy quizzes and JS loader to output
        run: |
          mkdir -p out/customization/quizzes
          mkdir -p out/customization/js
          cp customization/quizzes/* out/customization/quizzes/
          cp customization/js/* out/customization/js/

      - name: üí° Inject next-lesson buttons
        run: |
          node .github/scripts/inject-next-lesson-footer.js

      - name: üì¶ Copy homepage to index.html
        run: |
          cp out/dita_structured_authoring.html out/index.html

      - name: üßê Inspect HTML output for next-lesson buttons
        run: |
          echo "üîç Checking output HTML files for injected next-lesson buttons:"
          grep -r 'class="next-lesson"' out/ || echo "‚ùå No next-lesson buttons found"

      - name: Overwrite default CSS (commonltr.css)
        run: |
          cp -f customization/css/mytheme.css out/commonltr.css

      - name: üì§ Copy quiz loader script to output
        run: |
          mkdir -p out/customization/js
          cp customization/js/quiz-loader.js out/customization/js/quiz-loader.js

      - name: üîç Enhanced debug output structure
        run: |
          echo "=== Pre-copy source files ==="
          find . -name "quiz-loader.js" -o -name "quiz_introduction_to_dita.js" | head -10
          echo ""
          echo "=== Post-copy output structure ==="
          find out -type f | grep -E '\.(js|html)$' | sort
          echo ""
          echo "=== Quiz and JS files specifically ==="
          ls -la out/customization/quizzes/ 2>/dev/null || echo "‚ùå Quizzes directory not found"
          ls -la out/customization/js/ 2>/dev/null || echo "‚ùå JS directory not found"
          echo ""
          echo "=== Content of quiz-loader.js if found ==="
          if [ -f "out/customization/js/quiz-loader.js" ]; then
            head -5 out/customization/js/quiz-loader.js
            echo "‚úÖ quiz-loader.js exists and has content"
          else
            echo "‚ùå quiz-loader.js not found in output"
          fi
          echo ""
          echo "=== Checking HTML for script references ==="
          find out -name "*.html" -exec grep -l "script" {} \; | head -3 | while read file; do
            echo "--- Scripts in $file ---"
            grep "script" "$file" || echo "No script tags found"
          done
          echo ""
          echo "=== Checking for quiz-related content in HTML ==="
          find out -name "*.html" -exec grep -l "quiz\|data-quiz\|Loading quiz" {} \; | head -1 | while read file; do
            echo "--- Quiz content in $file ---"
            grep -A 5 -B 5 "quiz\|data-quiz\|Loading quiz" "$file" || echo "No quiz content found"
          done

      - name: Deploy to gh-pages branch
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
