<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Quiz: Introduction to DITA</title>
  <link rel="stylesheet" href="customization/css/quiz.css">
  <style>
    .quiz-question {
      margin-bottom: 30px;
    }
    .quiz-options button {
      display: block;
      margin: 8px 0;
      padding: 10px 15px;
      border: none;
      border-radius: 5px;
      background-color: var(--color-light-gray);
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    .quiz-options button.correct {
      background-color: var(--color-teal);
      color: white;
    }
    .quiz-options button.incorrect {
      background-color: #ff4d4f;
      color: white;
    }
    .feedback {
      margin-top: 10px;
      font-weight: bold;
    }
  </style>
</head>
<body>

  <h1>Quiz: Introduction to DITA</h1>
  <p>This quiz assesses understanding of the fundamental concepts introduced in Part I: Introduction to DITA.</p>

  <div class="quiz">

    <div class="quiz-question" data-question="1">
      <p>1. What is the primary goal of structured authoring?</p>
      <div class="quiz-options">
        <button data-correct="false">a) Add more images to documents</button>
        <button data-correct="true">b) Enable consistent, reusable, and scalable content creation</button>
        <button data-correct="false">c) Use fewer tools</button>
        <button data-correct="false">d) None of the above</button>
      </div>
      <div class="feedback"></div>
    </div>

    <div class="quiz-question" data-question="2">
      <p>2. Which of the following is NOT a core principle of DITA?</p>
      <div class="quiz-options">
        <button data-correct="false">a) Topic-based authoring</button>
        <button data-correct="false">b) Separation of content and format</button>
        <button data-correct="false">c) Conditional publishing</button>
        <button data-correct="true">d) Proprietary format</button>
      </div>
      <div class="feedback"></div>
    </div>

    <div class="quiz-question" data-question="3">
      <p>3. How does DITA support multi-channel publishing?</p>
      <div class="quiz-options">
        <button data-correct="false">a) It restricts output to PDF only</button>
        <button data-correct="false">b) By embedding fonts</button>
        <button data-correct="true">c) By separating content from presentation</button>
        <button data-correct="false">d) By using Markdown</button>
      </div>
      <div class="feedback"></div>
    </div>

    <div class="quiz-question" data-question="4">
      <p>4. Which business challenge does DITA's content reuse capability primarily solve?</p>
      <div class="quiz-options">
        <button data-correct="false">a) Poor search engine optimization</button>
        <button data-correct="true">b) Duplicate content maintenance across multiple documents</button>
        <button data-correct="false">c) Lack of version control</button>
        <button data-correct="false">d) Inadequate user interface design</button>
      </div>
      <div class="feedback"></div>
    </div>

    <div class="quiz-question" data-question="5">
      <p>5. When should an organization typically choose DITA over simpler markup formats like Markdown?</p>
      <div class="quiz-options">
        <button data-correct="false">a) When they have only one publication target</button>
        <button data-correct="false">b) When their content is primarily narrative rather than procedural</button>
        <button data-correct="true">c) When they need advanced content reuse, conditional publishing, or professional multi-format output</button>
        <button data-correct="false">d) When they want to minimize their toolchain complexity</button>
      </div>
      <div class="feedback"></div>
    </div>

  </div>

  <script>
    const questions = document.querySelectorAll('.quiz-question');

    questions.forEach((question) => {
      const buttons = question.querySelectorAll('button');
      const feedback = question.querySelector('.feedback');

      buttons.forEach((btn) => {
        btn.addEventListener('click', () => {
          // Prevent multiple selections
          if (question.classList.contains('answered')) return;

          const correct = btn.dataset.correct === 'true';
          if (correct) {
            btn.classList.add('correct');
            feedback.textContent = 'Correct!';
          } else {
            btn.classList.add('incorrect');
            feedback.textContent = 'Incorrect. Try reviewing the material.';
          }

          question.classList.add('answered');

          // Tracking for analytics
          const questionNumber = question.dataset.question;
          const answerText = btn.textContent;
          const isCorrect = correct;

          // Example tracking hook (replace with real analytics as needed)
          console.log(`Question ${questionNumber}: "${answerText}" - ${isCorrect ? 'Correct' : 'Incorrect'}`);
        });
      });
    });
  </script>

</body>
</html>
